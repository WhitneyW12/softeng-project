<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.9 (Jython 2.7.0 on java1.8.0_60)" generated="20151014 12:10:50.806">
<suite source="C:\Users\james\Desktop\softeng-project\acceptance\ArgsParserTests.txt" name="ArgsParserTests" id="s1">
<test name="Test Volume Calculator Normal Function" id="s1-t1">
<kw library="ArgsParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>7</arg>
<arg>5</arg>
<arg>2</arg>
</arguments>
<status endtime="20151014 12:10:51.103" starttime="20151014 12:10:51.087" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Length">
<assign>
<var>${length}</var>
</assign>
<msg level="WARN" timestamp="20151014 12:10:51.103">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="INFO" timestamp="20151014 12:10:51.103">${length} = 7</msg>
<status endtime="20151014 12:10:51.103" starttime="20151014 12:10:51.103" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>7</arg>
<arg>${length}</arg>
</arguments>
<status endtime="20151014 12:10:51.123" starttime="20151014 12:10:51.120" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Width">
<assign>
<var>${width}</var>
</assign>
<msg level="INFO" timestamp="20151014 12:10:51.126">${width} = 5</msg>
<status endtime="20151014 12:10:51.127" starttime="20151014 12:10:51.124" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>5</arg>
<arg>${width}</arg>
</arguments>
<status endtime="20151014 12:10:51.132" starttime="20151014 12:10:51.129" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Height">
<assign>
<var>${height}</var>
</assign>
<msg level="INFO" timestamp="20151014 12:10:51.136">${height} = 2</msg>
<status endtime="20151014 12:10:51.136" starttime="20151014 12:10:51.134" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>2</arg>
<arg>${height}</arg>
</arguments>
<status endtime="20151014 12:10:51.141" starttime="20151014 12:10:51.138" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Program Output">
<assign>
<var>${output}</var>
</assign>
<msg level="FAIL" timestamp="20151014 12:10:51.141">NoSuchMethodError: edu.jsu.mcis.ArgsParser.getHelp()Z</msg>
<status endtime="20151014 12:10:51.141" starttime="20151014 12:10:51.141" status="FAIL"></status>
</kw>
<status critical="yes" endtime="20151014 12:10:51.141" starttime="20151014 12:10:51.087" status="FAIL">NoSuchMethodError: edu.jsu.mcis.ArgsParser.getHelp()Z</status>
</test>
<test name="Test Unrecognized Argument" id="s1-t2">
<kw library="ArgsParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>7</arg>
<arg>5</arg>
<arg>2</arg>
<arg>43</arg>
</arguments>
<status endtime="20151014 12:10:51.156" starttime="20151014 12:10:51.156" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Program Output">
<assign>
<var>${output}</var>
</assign>
<msg level="FAIL" timestamp="20151014 12:10:51.156">NoSuchMethodError: edu.jsu.mcis.ArgsParser.getHelp()Z</msg>
<status endtime="20151014 12:10:51.156" starttime="20151014 12:10:51.156" status="FAIL"></status>
</kw>
<status critical="yes" endtime="20151014 12:10:51.172" starttime="20151014 12:10:51.156" status="FAIL">NoSuchMethodError: edu.jsu.mcis.ArgsParser.getHelp()Z</status>
</test>
<test name="Test Absurd Program Normal Function" id="s1-t3">
<kw library="ArgsParserKeywords" name="Start Absurd Program With Arguments">
<arguments>
<arg>dog</arg>
<arg>2</arg>
<arg>true</arg>
<arg>3.5</arg>
</arguments>
<status endtime="20151014 12:10:51.172" starttime="20151014 12:10:51.172" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Pet">
<assign>
<var>${pet}</var>
</assign>
<msg level="INFO" timestamp="20151014 12:10:51.172">${pet} = dog</msg>
<status endtime="20151014 12:10:51.172" starttime="20151014 12:10:51.172" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>dog</arg>
<arg>${pet}</arg>
</arguments>
<status endtime="20151014 12:10:51.172" starttime="20151014 12:10:51.172" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Number">
<assign>
<var>${number}</var>
</assign>
<msg level="INFO" timestamp="20151014 12:10:51.188">${number} = 2</msg>
<status endtime="20151014 12:10:51.188" starttime="20151014 12:10:51.188" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>2</arg>
<arg>${number}</arg>
</arguments>
<status endtime="20151014 12:10:51.188" starttime="20151014 12:10:51.188" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Rainy">
<assign>
<var>${rainy}</var>
</assign>
<msg level="INFO" timestamp="20151014 12:10:51.188">${rainy} = true</msg>
<status endtime="20151014 12:10:51.188" starttime="20151014 12:10:51.188" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>true</arg>
<arg>${rainy}</arg>
</arguments>
<status endtime="20151014 12:10:51.188" starttime="20151014 12:10:51.188" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Bathrooms">
<assign>
<var>${bathrooms}</var>
</assign>
<msg level="INFO" timestamp="20151014 12:10:51.188">${bathrooms} = 3.5</msg>
<status endtime="20151014 12:10:51.203" starttime="20151014 12:10:51.188" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>3.5</arg>
<arg>${bathrooms}</arg>
</arguments>
<status endtime="20151014 12:10:51.203" starttime="20151014 12:10:51.203" status="PASS"></status>
</kw>
<status critical="yes" endtime="20151014 12:10:51.203" starttime="20151014 12:10:51.172" status="PASS"></status>
</test>
<test name="Test Usage Message" id="s1-t4">
<kw library="ArgsParserKeywords" name="Start Program With Arguments">
<arguments>
<arg>-h</arg>
</arguments>
<status endtime="20151014 12:10:51.203" starttime="20151014 12:10:51.203" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Program Output">
<assign>
<var>${output}</var>
</assign>
<msg level="FAIL" timestamp="20151014 12:10:51.203">NoSuchMethodError: edu.jsu.mcis.ArgsParser.getHelp()Z</msg>
<status endtime="20151014 12:10:51.219" starttime="20151014 12:10:51.203" status="FAIL"></status>
</kw>
<status critical="yes" endtime="20151014 12:10:51.219" starttime="20151014 12:10:51.203" status="FAIL">NoSuchMethodError: edu.jsu.mcis.ArgsParser.getHelp()Z</status>
</test>
<test name="Test Incorrect Datatype Message" id="s1-t5">
<kw library="ArgsParserKeywords" name="Start Program With Arguments">
<arguments>
<arg>7</arg>
<arg>something</arg>
<arg>2</arg>
</arguments>
<msg level="FAIL" timestamp="20151014 12:10:51.219">NumberFormatException: usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: argument width: invalid double value: something</msg>
<status endtime="20151014 12:10:51.219" starttime="20151014 12:10:51.219" status="FAIL"></status>
</kw>
<status critical="yes" endtime="20151014 12:10:51.219" starttime="20151014 12:10:51.219" status="FAIL">NumberFormatException: usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: argument width: invalid double value: something</status>
</test>
<test name="Test Named Argument Defaults" id="s1-t6">
<kw library="ArgsParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>7</arg>
<arg>3</arg>
<arg>2</arg>
</arguments>
<status endtime="20151014 12:10:51.235" starttime="20151014 12:10:51.219" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Length">
<assign>
<var>${length}</var>
</assign>
<msg level="WARN" timestamp="20151014 12:10:51.103">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151014 12:10:51.235">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="INFO" timestamp="20151014 12:10:51.235">${length} = 7</msg>
<status endtime="20151014 12:10:51.235" starttime="20151014 12:10:51.235" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>7</arg>
<arg>${length}</arg>
</arguments>
<status endtime="20151014 12:10:51.235" starttime="20151014 12:10:51.235" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Width">
<assign>
<var>${width}</var>
</assign>
<msg level="INFO" timestamp="20151014 12:10:51.250">${width} = 3</msg>
<status endtime="20151014 12:10:51.250" starttime="20151014 12:10:51.250" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>3</arg>
<arg>${width}</arg>
</arguments>
<status endtime="20151014 12:10:51.250" starttime="20151014 12:10:51.250" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Height">
<assign>
<var>${height}</var>
</assign>
<msg level="INFO" timestamp="20151014 12:10:51.250">${height} = 2</msg>
<status endtime="20151014 12:10:51.250" starttime="20151014 12:10:51.250" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>2</arg>
<arg>${height}</arg>
</arguments>
<status endtime="20151014 12:10:51.250" starttime="20151014 12:10:51.250" status="PASS"></status>
</kw>
<kw name="Get Type">
<assign>
<var>${type}</var>
</assign>
<msg level="FAIL" timestamp="20151014 12:10:51.266">No keyword with name 'Get Type' found. Did you mean:
    ArgsParserKeywords.Get Pet
    BuiltIn.Get Time</msg>
<status endtime="20151014 12:10:51.266" starttime="20151014 12:10:51.266" status="FAIL"></status>
</kw>
<status critical="yes" endtime="20151014 12:10:51.266" starttime="20151014 12:10:51.219" status="FAIL">No keyword with name 'Get Type' found. Did you mean:
    ArgsParserKeywords.Get Pet
    BuiltIn.Get Time</status>
</test>
<test name="Test Named Argument Single" id="s1-t7">
<kw library="ArgsParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>7</arg>
<arg>3</arg>
<arg>2</arg>
<arg>--type</arg>
<arg>ellipsoid</arg>
</arguments>
<msg level="FAIL" timestamp="20151014 12:10:51.281">TooManyArgumentsException: usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: ellipsoid</msg>
<status endtime="20151014 12:10:51.281" starttime="20151014 12:10:51.266" status="FAIL"></status>
</kw>
<status critical="yes" endtime="20151014 12:10:51.281" starttime="20151014 12:10:51.266" status="FAIL">TooManyArgumentsException: usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: ellipsoid</status>
</test>
<test name="Test Named Argument Multiple" id="s1-t8">
<kw library="ArgsParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>7</arg>
<arg>3</arg>
<arg>2</arg>
<arg>--type</arg>
<arg>ellipsoid</arg>
<arg>--digits</arg>
<arg>1</arg>
</arguments>
<msg level="FAIL" timestamp="20151014 12:10:51.281">TooManyArgumentsException: usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: ellipsoid</msg>
<status endtime="20151014 12:10:51.281" starttime="20151014 12:10:51.281" status="FAIL"></status>
</kw>
<status critical="yes" endtime="20151014 12:10:51.297" starttime="20151014 12:10:51.281" status="FAIL">TooManyArgumentsException: usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: ellipsoid</status>
</test>
<status endtime="20151014 12:10:51.297" starttime="20151014 12:10:50.822" status="FAIL"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="7">Critical Tests</stat>
<stat pass="1" fail="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="7" name="ArgsParserTests" id="s1">ArgsParserTests</stat>
</suite>
</statistics>
<errors>
<msg level="WARN" timestamp="20151014 12:10:51.103">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151014 12:10:51.103">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151014 12:10:51.235">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
</errors>
</robot>
