<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.9 (Jython 2.7.0 on java1.8.0_60)" generated="20151009 11:21:10.580">
<suite source="C:\Users\james\Desktop\softeng-project\acceptance\ArgsParserTests.txt" name="ArgsParserTests" id="s1">
<test name="Test Volume Calculator Normal Function" id="s1-t1">
<kw library="ArgsParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>7</arg>
<arg>5</arg>
<arg>2</arg>
</arguments>
<status endtime="20151009 11:21:10.908" starttime="20151009 11:21:10.899" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Length">
<assign>
<var>${length}</var>
</assign>
<msg level="WARN" timestamp="20151009 11:21:10.910">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="INFO" timestamp="20151009 11:21:10.916">${length} = 7</msg>
<status endtime="20151009 11:21:10.916" starttime="20151009 11:21:10.911" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>7</arg>
<arg>${length}</arg>
</arguments>
<status endtime="20151009 11:21:10.923" starttime="20151009 11:21:10.918" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Width">
<assign>
<var>${width}</var>
</assign>
<msg level="INFO" timestamp="20151009 11:21:10.926">${width} = 5</msg>
<status endtime="20151009 11:21:10.927" starttime="20151009 11:21:10.924" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>5</arg>
<arg>${width}</arg>
</arguments>
<status endtime="20151009 11:21:10.932" starttime="20151009 11:21:10.929" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Height">
<assign>
<var>${height}</var>
</assign>
<msg level="INFO" timestamp="20151009 11:21:10.937">${height} = 2</msg>
<status endtime="20151009 11:21:10.938" starttime="20151009 11:21:10.934" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>2</arg>
<arg>${height}</arg>
</arguments>
<status endtime="20151009 11:21:10.942" starttime="20151009 11:21:10.939" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Program Output">
<assign>
<var>${output}</var>
</assign>
<msg level="INFO" timestamp="20151009 11:21:10.946">${output} = 70.0</msg>
<status endtime="20151009 11:21:10.947" starttime="20151009 11:21:10.944" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${output}</arg>
<arg>70.0</arg>
</arguments>
<status endtime="20151009 11:21:10.953" starttime="20151009 11:21:10.948" status="PASS"></status>
</kw>
<status critical="yes" endtime="20151009 11:21:10.954" starttime="20151009 11:21:10.894" status="PASS"></status>
</test>
<test name="Test Unrecognized Argument" id="s1-t2">
<kw library="ArgsParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>7</arg>
<arg>5</arg>
<arg>2</arg>
<arg>43</arg>
</arguments>
<msg level="INFO" timestamp="20151009 11:21:10.962">usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: 7usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: 5usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: 2usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: 43</msg>
<status endtime="20151009 11:21:10.963" starttime="20151009 11:21:10.959" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Program Output">
<assign>
<var>${output}</var>
</assign>
<msg level="INFO" timestamp="20151009 11:21:10.966">${output} = usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: 43</msg>
<status endtime="20151009 11:21:10.967" starttime="20151009 11:21:10.964" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${output}</arg>
<arg>${expected}</arg>
</arguments>
<status endtime="20151009 11:21:10.973" starttime="20151009 11:21:10.968" status="PASS"></status>
</kw>
<status critical="yes" endtime="20151009 11:21:10.974" starttime="20151009 11:21:10.956" status="PASS"></status>
</test>
<test name="Test Absurd Program Normal Function" id="s1-t3">
<kw library="ArgsParserKeywords" name="Start Absurd Program With Arguments">
<arguments>
<arg>dog</arg>
<arg>2</arg>
<arg>true</arg>
<arg>3.5</arg>
</arguments>
<status endtime="20151009 11:21:10.984" starttime="20151009 11:21:10.979" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Pet">
<assign>
<var>${pet}</var>
</assign>
<msg level="INFO" timestamp="20151009 11:21:10.990">${pet} = dog</msg>
<status endtime="20151009 11:21:10.991" starttime="20151009 11:21:10.987" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>dog</arg>
<arg>${pet}</arg>
</arguments>
<status endtime="20151009 11:21:10.994" starttime="20151009 11:21:10.992" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Number">
<assign>
<var>${number}</var>
</assign>
<msg level="INFO" timestamp="20151009 11:21:10.998">${number} = 2</msg>
<status endtime="20151009 11:21:10.998" starttime="20151009 11:21:10.996" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>2</arg>
<arg>${number}</arg>
</arguments>
<status endtime="20151009 11:21:11.004" starttime="20151009 11:21:11.000" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Rainy">
<assign>
<var>${rainy}</var>
</assign>
<msg level="INFO" timestamp="20151009 11:21:11.006">${rainy} = true</msg>
<status endtime="20151009 11:21:11.007" starttime="20151009 11:21:11.005" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>true</arg>
<arg>${rainy}</arg>
</arguments>
<status endtime="20151009 11:21:11.010" starttime="20151009 11:21:11.008" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Bathrooms">
<assign>
<var>${bathrooms}</var>
</assign>
<msg level="INFO" timestamp="20151009 11:21:11.013">${bathrooms} = 3.5</msg>
<status endtime="20151009 11:21:11.013" starttime="20151009 11:21:11.011" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>3.5</arg>
<arg>${bathrooms}</arg>
</arguments>
<status endtime="20151009 11:21:11.017" starttime="20151009 11:21:11.014" status="PASS"></status>
</kw>
<status critical="yes" endtime="20151009 11:21:11.018" starttime="20151009 11:21:10.976" status="PASS"></status>
</test>
<test name="Test Usage Message" id="s1-t4">
<kw library="ArgsParserKeywords" name="Start Program With Arguments">
<arguments>
<arg>-h</arg>
</arguments>
<status endtime="20151009 11:21:11.023" starttime="20151009 11:21:11.021" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Program Output">
<assign>
<var>${output}</var>
</assign>
<msg level="INFO" timestamp="20151009 11:21:11.025">${output} = usage: java VolumeCalculator length width height 
Calculate the volume of a box
positional arguments:
length the length of the box
width the width of the box
height the height of the box
</msg>
<status endtime="20151009 11:21:11.026" starttime="20151009 11:21:11.024" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expect}</arg>
<arg>${output}</arg>
</arguments>
<status endtime="20151009 11:21:11.030" starttime="20151009 11:21:11.027" status="PASS"></status>
</kw>
<status critical="yes" endtime="20151009 11:21:11.031" starttime="20151009 11:21:11.019" status="PASS"></status>
</test>
<test name="Test Incorrect Datatype Message" id="s1-t5">
<kw library="ArgsParserKeywords" name="Start Program With Arguments">
<arguments>
<arg>7</arg>
<arg>something</arg>
<arg>2</arg>
</arguments>
<status endtime="20151009 11:21:11.038" starttime="20151009 11:21:11.035" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Program Output">
<assign>
<var>${output}</var>
</assign>
<msg level="INFO" timestamp="20151009 11:21:11.040">${output} = usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: argument width: invalid double value: something</msg>
<status endtime="20151009 11:21:11.041" starttime="20151009 11:21:11.039" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${output}</arg>
<arg>${exp}</arg>
</arguments>
<status endtime="20151009 11:21:11.044" starttime="20151009 11:21:11.041" status="PASS"></status>
</kw>
<status critical="yes" endtime="20151009 11:21:11.045" starttime="20151009 11:21:11.033" status="PASS"></status>
</test>
<test name="Test Named Argument Defaults" id="s1-t6">
<kw library="ArgsParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>7</arg>
<arg>3</arg>
<arg>2</arg>
</arguments>
<status endtime="20151009 11:21:11.051" starttime="20151009 11:21:11.049" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Length">
<assign>
<var>${length}</var>
</assign>
<msg level="WARN" timestamp="20151009 11:21:10.910">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151009 11:21:11.052">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="INFO" timestamp="20151009 11:21:11.056">${length} = 7</msg>
<status endtime="20151009 11:21:11.057" starttime="20151009 11:21:11.053" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>7</arg>
<arg>${length}</arg>
</arguments>
<status endtime="20151009 11:21:11.060" starttime="20151009 11:21:11.058" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Width">
<assign>
<var>${width}</var>
</assign>
<msg level="INFO" timestamp="20151009 11:21:11.063">${width} = 3</msg>
<status endtime="20151009 11:21:11.064" starttime="20151009 11:21:11.061" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>3</arg>
<arg>${width}</arg>
</arguments>
<status endtime="20151009 11:21:11.068" starttime="20151009 11:21:11.065" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Height">
<assign>
<var>${height}</var>
</assign>
<msg level="INFO" timestamp="20151009 11:21:11.072">${height} = 2</msg>
<status endtime="20151009 11:21:11.073" starttime="20151009 11:21:11.070" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>2</arg>
<arg>${height}</arg>
</arguments>
<status endtime="20151009 11:21:11.077" starttime="20151009 11:21:11.074" status="PASS"></status>
</kw>
<kw name="Get Type">
<assign>
<var>${type}</var>
</assign>
<msg level="FAIL" timestamp="20151009 11:21:11.090">No keyword with name 'Get Type' found. Did you mean:
    ArgsParserKeywords.Get Pet
    BuiltIn.Get Time</msg>
<status endtime="20151009 11:21:11.090" starttime="20151009 11:21:11.088" status="FAIL"></status>
</kw>
<status critical="yes" endtime="20151009 11:21:11.091" starttime="20151009 11:21:11.046" status="FAIL">No keyword with name 'Get Type' found. Did you mean:
    ArgsParserKeywords.Get Pet
    BuiltIn.Get Time</status>
</test>
<test name="Test Named Argument Single" id="s1-t7">
<kw library="ArgsParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>7</arg>
<arg>3</arg>
<arg>2</arg>
<arg>--type</arg>
<arg>ellipsoid</arg>
</arguments>
<msg level="INFO" timestamp="20151009 11:21:11.102">usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: 7usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: 3usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: 2usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: --typeusage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: ellipsoid</msg>
<status endtime="20151009 11:21:11.103" starttime="20151009 11:21:11.098" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Length">
<assign>
<var>${length}</var>
</assign>
<msg level="WARN" timestamp="20151009 11:21:10.910">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151009 11:21:11.052">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151009 11:21:11.104">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="INFO" timestamp="20151009 11:21:11.111">${length} = </msg>
<status endtime="20151009 11:21:11.111" starttime="20151009 11:21:11.105" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>7</arg>
<arg>${length}</arg>
</arguments>
<msg level="FAIL" timestamp="20151009 11:21:11.117">7 != </msg>
<status endtime="20151009 11:21:11.118" starttime="20151009 11:21:11.113" status="FAIL"></status>
</kw>
<status critical="yes" endtime="20151009 11:21:11.119" starttime="20151009 11:21:11.094" status="FAIL">7 != </status>
</test>
<test name="Test Named Argument Multiple" id="s1-t8">
<kw library="ArgsParserKeywords" name="Start Volume Cacluator With Arguments">
<arguments>
<arg>7</arg>
<arg>3</arg>
<arg>2</arg>
<arg>--type</arg>
<arg>ellipsoid</arg>
<arg>--digits</arg>
<arg>1</arg>
</arguments>
<msg level="INFO" timestamp="20151009 11:21:11.129">usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: 7usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: 3usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: 2usage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: --typeusage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: ellipsoidusage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: --digitsusage: java VolumeCalculator length width height 
VolumeCalculator.java: error: unrecognized arguments: 1</msg>
<status endtime="20151009 11:21:11.130" starttime="20151009 11:21:11.125" status="PASS"></status>
</kw>
<kw library="ArgsParserKeywords" name="Get Length">
<assign>
<var>${length}</var>
</assign>
<msg level="WARN" timestamp="20151009 11:21:10.910">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151009 11:21:11.052">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151009 11:21:11.104">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151009 11:21:11.131">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="INFO" timestamp="20151009 11:21:11.137">${length} = </msg>
<status endtime="20151009 11:21:11.138" starttime="20151009 11:21:11.131" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>7</arg>
<arg>${length}</arg>
</arguments>
<msg level="FAIL" timestamp="20151009 11:21:11.141">7 != </msg>
<status endtime="20151009 11:21:11.141" starttime="20151009 11:21:11.138" status="FAIL"></status>
</kw>
<status critical="yes" endtime="20151009 11:21:11.142" starttime="20151009 11:21:11.122" status="FAIL">7 != </status>
</test>
<status endtime="20151009 11:21:11.147" starttime="20151009 11:21:10.592" status="FAIL"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="3">Critical Tests</stat>
<stat pass="5" fail="3">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="3" name="ArgsParserTests" id="s1">ArgsParserTests</stat>
</suite>
</statistics>
<errors>
<msg level="WARN" timestamp="20151009 11:21:10.910">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151009 11:21:10.910">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151009 11:21:11.052">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151009 11:21:10.910">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151009 11:21:11.052">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151009 11:21:11.104">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151009 11:21:10.910">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151009 11:21:11.052">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151009 11:21:11.104">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20151009 11:21:11.131">Keyword 'Get Length' found both from a custom test library 'ArgsParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgsParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
</errors>
</robot>
